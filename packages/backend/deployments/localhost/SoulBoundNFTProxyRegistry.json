{
  "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "beaconAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "getContractInfoByProxyAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "organization",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct SoulBoundNFTProxyRegistry.ContractInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getProxiesByOwnerAddress",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proxies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "organization",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "registerBeaconProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beaconAddress",
          "type": "address"
        }
      ],
      "name": "setBeaconAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setProxyFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xce9884671fc8f882abe6a8601b0e6b932ffc348d7de6d135ed579ca45273927a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
    "transactionIndex": 0,
    "gasUsed": "719078",
    "logsBloom": "0x
    "blockHash": "0x0604eb966c57fb2140f51e9697ab68659da859855d86344ab491b1675fd3a422",
    "transactionHash": "0xce9884671fc8f882abe6a8601b0e6b932ffc348d7de6d135ed579ca45273927a",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 20,
        "transactionHash": "0xce9884671fc8f882abe6a8601b0e6b932ffc348d7de6d135ed579ca45273927a",
        "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x0604eb966c57fb2140f51e9697ab68659da859855d86344ab491b1675fd3a422"
      }
    ],
    "blockNumber": 20,
    "cumulativeGasUsed": "719078",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7b1e1a0d4be5a02498ecb6c452b8ac64",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beaconAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"}],\"name\":\"getContractInfoByProxyAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organization\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct SoulBoundNFTProxyRegistry.ContractInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getProxiesByOwnerAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proxies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organization\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"registerBeaconProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beaconAddress\",\"type\":\"address\"}],\"name\":\"setBeaconAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setProxyFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"registerBeaconProxy(address,string,string,string,address)\":{\"notice\":\"newBeaconProxy creates and initializes a new proxy for the given UpgradeableBeacon\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SoulBoundNFTProxyRegistry.sol\":\"SoulBoundNFTProxyRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/SoulBoundNFTProxyRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract SoulBoundNFTProxyRegistry is Ownable {\\r\\n    using Counters for Counters.Counter;\\r\\n\\r\\n    //===== State =====//\\r\\n\\r\\n    Counters.Counter public proxyCount;\\r\\n\\r\\n    struct ContractInfo {\\r\\n        string name;\\r\\n        string symbol;\\r\\n        string organization;\\r\\n        address owner;\\r\\n    }\\r\\n\\r\\n    address public beaconAddress;\\r\\n    address[] public proxies;\\r\\n\\r\\n    mapping(address => address[]) ownerToProxyAddress;\\r\\n    mapping(address => ContractInfo) proxyAddressToContractInfo;\\r\\n\\r\\n    address public proxyFactory;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    /// newBeaconProxy creates and initializes a new proxy for the given UpgradeableBeacon\\r\\n    function registerBeaconProxy(\\r\\n        address proxyAddress,\\r\\n        string memory name,\\r\\n        string memory symbol,\\r\\n        string memory organization,\\r\\n        address tokenOwner\\r\\n    ) public onlyProxyFactory {\\r\\n        ownerToProxyAddress[tokenOwner].push(proxyAddress);\\r\\n\\r\\n        proxyAddressToContractInfo[proxyAddress] = ContractInfo({\\r\\n            name: name,\\r\\n            symbol: symbol,\\r\\n            organization: organization,\\r\\n            owner: tokenOwner\\r\\n        });\\r\\n\\r\\n        proxies.push(proxyAddress);\\r\\n\\r\\n        proxyCount.increment();\\r\\n    }\\r\\n\\r\\n    function getProxiesByOwnerAddress(address _owner)\\r\\n        public\\r\\n        view\\r\\n        returns (address[] memory)\\r\\n    {\\r\\n        return ownerToProxyAddress[_owner];\\r\\n    }\\r\\n\\r\\n    function getContractInfoByProxyAddress(address _proxy)\\r\\n        public\\r\\n        view\\r\\n        returns (ContractInfo memory)\\r\\n    {\\r\\n        return proxyAddressToContractInfo[_proxy];\\r\\n    }\\r\\n\\r\\n    function setBeaconAddress(address _beaconAddress) public onlyProxyFactory {\\r\\n        beaconAddress = _beaconAddress;\\r\\n    }\\r\\n\\r\\n    function setProxyFactory(address _factory) public onlyOwner {\\r\\n        proxyFactory = _factory;\\r\\n    }\\r\\n\\r\\n    modifier onlyProxyFactory() {\\r\\n        require(msg.sender == proxyFactory, \\\"Not allowed\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x96a8cd11e5058968879ce0437ddf79da98789a92756e87ed2e603c51451bb5a7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b968061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639213034411610071578063921303441461014f578063abd90f8514610162578063c10f1a7514610175578063e08724c114610188578063f2fde38b146101a8578063fbddd751146101bb57600080fd5b806337c954d8146100b9578063433124d1146100d65780634913c134146100f6578063715018a61461010b5780637e2ec6d0146101135780638da5cb5b1461013e575b600080fd5b6001546100c39081565b6040519081526020015b60405180910390f35b6100e96100e436600461088a565b6101ce565b6040516100cd91906108f9565b610109610104366004610a16565b6103f5565b005b61010961056a565b600254610126906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b6000546001600160a01b0316610126565b61010961015d36600461088a565b61057e565b610126610170366004610ac0565b6105e8565b600654610126906001600160a01b031681565b61019b61019636600461088a565b610612565b6040516100cd9190610ad9565b6101096101b636600461088a565b610688565b6101096101c936600461088a565b610701565b610202604051806080016040528060608152602001606081526020016060815260200160006001600160a01b031681525090565b6001600160a01b0382166000908152600560205260409081902081516080810190925280548290829061023490610b26565b80601f016020809104026020016040519081016040528092919081815260200182805461026090610b26565b80156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b505050505081526020016001820180546102c690610b26565b80601f01602080910402602001604051908101604052809291908181526020018280546102f290610b26565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b5050505050815260200160028201805461035890610b26565b80601f016020809104026020016040519081016040528092919081815260200182805461038490610b26565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050509183525050600391909101546001600160a01b031660209091015292915050565b6006546001600160a01b031633146104425760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6001600160a01b03818116600081815260046020908152604080832080546001810182559084528284200180546001600160a01b031916958b169586179055805160808101825289815280830189905280820188905260608101949094529382526005815292902081518051929391926104bf92849201906107d5565b5060208281015180516104d892600185019201906107d5565b50604082015180516104f49160028401916020909101906107d5565b5060609190910151600391820180546001600160a01b03199081166001600160a01b03938416179091558254600181810185556000949094527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180549091169188169190911790558054810190555050505050565b61057261072b565b61057c6000610785565b565b6006546001600160a01b031633146105c65760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610439565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600381815481106105f857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561067c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161065e575b50505050509050919050565b61069061072b565b6001600160a01b0381166106f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610439565b6106fe81610785565b50565b61070961072b565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461057c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610439565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546107e190610b26565b90600052602060002090601f0160209004810192826108035760008555610849565b82601f1061081c57805160ff1916838001178555610849565b82800160010185558215610849579182015b8281111561084957825182559160200191906001019061082e565b50610855929150610859565b5090565b5b80821115610855576000815560010161085a565b80356001600160a01b038116811461088557600080fd5b919050565b60006020828403121561089c57600080fd5b6108a58261086e565b9392505050565b6000815180845260005b818110156108d2576020818501810151868301820152016108b6565b818111156108e4576000602083870101525b50601f01601f19169290920160200192915050565b60208152600082516080602084015261091560a08401826108ac565b90506020840151601f198085840301604086015261093383836108ac565b925060408601519150808584030160608601525061095182826108ac565b606095909501516001600160a01b031660809490940193909352509192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099a57600080fd5b813567ffffffffffffffff808211156109b5576109b5610973565b604051601f8301601f19908116603f011681019082821181831017156109dd576109dd610973565b816040528381528660208588010111156109f657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215610a2e57600080fd5b610a378661086e565b9450602086013567ffffffffffffffff80821115610a5457600080fd5b610a6089838a01610989565b95506040880135915080821115610a7657600080fd5b610a8289838a01610989565b94506060880135915080821115610a9857600080fd5b50610aa588828901610989565b925050610ab46080870161086e565b90509295509295909350565b600060208284031215610ad257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610b1a5783516001600160a01b031683529284019291840191600101610af5565b50909695505050505050565b600181811c90821680610b3a57607f821691505b602082108103610b5a57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208fbc15b15b5376e49824908ebcd26aa9c28520df18a30f2ea7569fc753a9e95064736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80639213034411610071578063921303441461014f578063abd90f8514610162578063c10f1a7514610175578063e08724c114610188578063f2fde38b146101a8578063fbddd751146101bb57600080fd5b806337c954d8146100b9578063433124d1146100d65780634913c134146100f6578063715018a61461010b5780637e2ec6d0146101135780638da5cb5b1461013e575b600080fd5b6001546100c39081565b6040519081526020015b60405180910390f35b6100e96100e436600461088a565b6101ce565b6040516100cd91906108f9565b610109610104366004610a16565b6103f5565b005b61010961056a565b600254610126906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b6000546001600160a01b0316610126565b61010961015d36600461088a565b61057e565b610126610170366004610ac0565b6105e8565b600654610126906001600160a01b031681565b61019b61019636600461088a565b610612565b6040516100cd9190610ad9565b6101096101b636600461088a565b610688565b6101096101c936600461088a565b610701565b610202604051806080016040528060608152602001606081526020016060815260200160006001600160a01b031681525090565b6001600160a01b0382166000908152600560205260409081902081516080810190925280548290829061023490610b26565b80601f016020809104026020016040519081016040528092919081815260200182805461026090610b26565b80156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b505050505081526020016001820180546102c690610b26565b80601f01602080910402602001604051908101604052809291908181526020018280546102f290610b26565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b5050505050815260200160028201805461035890610b26565b80601f016020809104026020016040519081016040528092919081815260200182805461038490610b26565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050509183525050600391909101546001600160a01b031660209091015292915050565b6006546001600160a01b031633146104425760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6001600160a01b03818116600081815260046020908152604080832080546001810182559084528284200180546001600160a01b031916958b169586179055805160808101825289815280830189905280820188905260608101949094529382526005815292902081518051929391926104bf92849201906107d5565b5060208281015180516104d892600185019201906107d5565b50604082015180516104f49160028401916020909101906107d5565b5060609190910151600391820180546001600160a01b03199081166001600160a01b03938416179091558254600181810185556000949094527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180549091169188169190911790558054810190555050505050565b61057261072b565b61057c6000610785565b565b6006546001600160a01b031633146105c65760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610439565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600381815481106105f857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561067c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161065e575b50505050509050919050565b61069061072b565b6001600160a01b0381166106f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610439565b6106fe81610785565b50565b61070961072b565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461057c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610439565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546107e190610b26565b90600052602060002090601f0160209004810192826108035760008555610849565b82601f1061081c57805160ff1916838001178555610849565b82800160010185558215610849579182015b8281111561084957825182559160200191906001019061082e565b50610855929150610859565b5090565b5b80821115610855576000815560010161085a565b80356001600160a01b038116811461088557600080fd5b919050565b60006020828403121561089c57600080fd5b6108a58261086e565b9392505050565b6000815180845260005b818110156108d2576020818501810151868301820152016108b6565b818111156108e4576000602083870101525b50601f01601f19169290920160200192915050565b60208152600082516080602084015261091560a08401826108ac565b90506020840151601f198085840301604086015261093383836108ac565b925060408601519150808584030160608601525061095182826108ac565b606095909501516001600160a01b031660809490940193909352509192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099a57600080fd5b813567ffffffffffffffff808211156109b5576109b5610973565b604051601f8301601f19908116603f011681019082821181831017156109dd576109dd610973565b816040528381528660208588010111156109f657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215610a2e57600080fd5b610a378661086e565b9450602086013567ffffffffffffffff80821115610a5457600080fd5b610a6089838a01610989565b95506040880135915080821115610a7657600080fd5b610a8289838a01610989565b94506060880135915080821115610a9857600080fd5b50610aa588828901610989565b925050610ab46080870161086e565b90509295509295909350565b600060208284031215610ad257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610b1a5783516001600160a01b031683529284019291840191600101610af5565b50909695505050505050565b600181811c90821680610b3a57607f821691505b602082108103610b5a57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208fbc15b15b5376e49824908ebcd26aa9c28520df18a30f2ea7569fc753a9e95064736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "registerBeaconProxy(address,string,string,string,address)": {
        "notice": "newBeaconProxy creates and initializes a new proxy for the given UpgradeableBeacon"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6776,
        "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9820,
        "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
        "label": "proxyCount",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)7782_storage"
      },
      {
        "astId": 9831,
        "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
        "label": "beaconAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9834,
        "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
        "label": "proxies",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 9839,
        "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
        "label": "ownerToProxyAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 9844,
        "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
        "label": "proxyAddressToContractInfo",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(ContractInfo)9829_storage)"
      },
      {
        "astId": 9846,
        "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
        "label": "proxyFactory",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_struct(ContractInfo)9829_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SoulBoundNFTProxyRegistry.ContractInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(ContractInfo)9829_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ContractInfo)9829_storage": {
        "encoding": "inplace",
        "label": "struct SoulBoundNFTProxyRegistry.ContractInfo",
        "members": [
          {
            "astId": 9822,
            "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9824,
            "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 9826,
            "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
            "label": "organization",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 9828,
            "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
            "label": "owner",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Counter)7782_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 7781,
            "contract": "contracts/SoulBoundNFTProxyRegistry.sol:SoulBoundNFTProxyRegistry",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}